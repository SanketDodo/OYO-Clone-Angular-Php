<?php

/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Fetch extends CI_Controller
{
    function __construct()
    {
        parent::__construct();

        //header('Access-Control-Allow-Origin: *');
        header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
        header('Access-Control-Allow-Headers: accept, Origin, Content-Type, X-Auth-Token , Authorization');

        error_reporting(E_ALL & ~E_NOTICE & ~E_WARNING);
        date_default_timezone_set('Asia/Calcutta');
        //require(APPPATH . 'libraries///logger.php');
        $this->load->library(array('session'));
    }

    function json_data()
    {
        header('Content-type: application/json');
        $json_request_data = file_get_contents("php://input");
        //logger::d("json_request_data",$json_request_data);
        $request_data = json_decode($json_request_data, true);
        //logger::d("request_data",$request_data);
        return $request_data;
    }


    //! write all Get call here

    public function app_login()
    {

        $json_data = $this->json_data();

        if ($json_data['UserName']) {
            $loginData = array(
                'UserName' => $json_data['UserName'],
                'Password' => $json_data['Password']
            );
        }

        $data = $this->Fetch_Model->app_login($loginData);
        if ($data['status'] == 'success') {
            echo json_encode($data);
        } else {
            echo json_encode($data);
        }
    }

    public function get_hotel_details_by_params()
    {

        $FUserId = $_GET['FUserId'];
        $WHERE = "";
        if ($_GET['FUserId'] != SUPER_ADMIN) {
            $WHERE = " AND h.created_by=" . $FUserId . "";
        }

        $FUserTypeId = $_GET['FUserTypeId'];

        $result_data = $this->Fetch_Model->get_data_by_query("SELECT l.fullname,h.* FROM `hotel` h 
JOIN `login` l ON l.Id = h.created_by 
WHERE h.IsDeleted = 1" . $WHERE . " ");

        for ($i = 0; $i < count($result_data); $i++) {

            $Hotel_Images = $this->Fetch_Model->get_data_by_query("SELECT * FROM `hotel_images` WHERE Fhotel_id=" . $result_data[$i]['id'] . " ");

            $result_data[$i]["SubmitedImage"] = 1;

            for ($j = 0; $j < count($Hotel_Images); $j++) {
                if ($Hotel_Images[$j]['image_type'] == 1) {
                    $result_data[$i]["HotelThumbnailUrl"] = base_url() . 'application/Uploads/HotelPhoto/' . $Hotel_Images[$j]["image"];
                } else {
                }
            }
        }
        echo json_encode($result_data);
    }

    public function get_profile_data()
    {

        $FUserId = $_GET['FUserId'];
        $FUserTypeId = $_GET['FUserTypeId'];

        $result_data = $this->Fetch_Model->get_data_by_query("SELECT l.*,h.* FROM `login` l 
JOIN `hotel` h ON h.`id` = l.`Fhotel_id` WHERE l.IsDeleted = 1 AND l.id= " . $FUserId . " AND l.user_type = " . $FUserTypeId . " ");

        for ($i = 0; $i < count($result_data); $i++) {
            //$Hotel_Images = $this->db->where(array("IsDeleted"=> 1,'Fhotel_id'=>"$result_data[$i]['Fhotel_id']"))->get("hotel_images")->result_array();
            $Hotel_Images = $this->Fetch_Model->get_data_by_query("SELECT * FROM hotel_images WHERE  Fhotel_id=" . $result_data[$i]['Fhotel_id'] . " AND IsDeleted=1 ");

            for ($j = 0; $j < count($Hotel_Images); $j++) {
                if ($Hotel_Images[$j]['image_type'] == 1) {
                    $result_data[$i]["HotelThumbnailUrl"] = base_url() . 'application/Uploads/HotelPhoto/' . $Hotel_Images[$j]["image"];
                } elseif ($Hotel_Images[$j]['image_type'] == 2) {
                    $result_data[$i]["HotelAmenitiesUrl"][] = base_url() . 'application/Uploads/HotelPhoto/' . $Hotel_Images[$j]["image"];
                } else {
                }
            }
        }
        echo json_encode($result_data);
    }

    public function get_hotel_data()
    {

        $HOTEL_data = $this->db->query("SELECT * FROM hotel WHERE IsDeleted = 1")->result_array();

        for ($i = 0; $i < count($HOTEL_data); $i++) {

            $Hotel_Images = $this->db->query("SELECT * FROM hotel_images WHERE IsDeleted = 1 AND Fhotel_id =" . $HOTEL_data[$i]['Id'] . " ")->result_array();

            $Hotel_Facilities = $this->db->query("SELECT rf.facilities,mrf.* FROM master_room_facilities mrf 
JOIN `room_facilities` rf ON rf.id=mrf.room_facilities AND rf.IsDeleted = 1
WHERE mrf.IsDeleted = 1 AND mrf.Fhotel_id = " . $HOTEL_data[$i]['Id'] . " AND mrf.froom_id IS NULL ")->result_array();

            for ($j = 0; $j < count($Hotel_Images); $j++) {
                if ($Hotel_Images[$j]['image_type'] == 1) {
                    $HOTEL_data[$i]["HotelThumbnailUrl"] = base_url() . 'application/Uploads/HotelPhoto/' . $Hotel_Images[$j]["image"];
                } elseif ($Hotel_Images[$j]['image_type'] == 2) {
                    $HOTEL_data[$i]["HotelAmenitiesUrl"][] = base_url() . 'application/Uploads/DocumentsPhoto/' . $Hotel_Images[$j]["image"];
                } else {
                }
            }

            for ($k = 0; $k < count($Hotel_Facilities); $k++) {
                $HOTEL_data[$i]["Facilities"][$k]['Id'] = $Hotel_Facilities[$k]['room_facilities'];
                $HOTEL_data[$i]["Facilities"][$k]['Anamities'] = $Hotel_Facilities[$k]['facilities'];
            }
        }
        echo json_encode($HOTEL_data);
    }

    public function get_room_data()
    {
        $FHotelId = $_GET['FhotelId'];

        //        $ROOM_data = $this->db->query("SELECT r.*,mrt.room_type,mp.package_type FROM rooms r
        //JOIN `master_room_type` mrt ON mrt.id=r.fmaster_room_type AND mrt.IsDeleted=1
        //JOIN `master_package_type` mp ON mp.id=r.fmaster_package_type AND mp.IsDeleted=1
        //WHERE r.IsDeleted = 1 AND r.fhotel_id = " . $FHotelId . " ")->result_array();

        $ROOM_data = $this->db->query("SELECT r.*,mrt.room_type FROM rooms r 
LEFT JOIN `master_room_type` mrt ON mrt.id=r.fmaster_room_type_id AND mrt.IsDeleted=1
WHERE r.IsDeleted = 1 AND r.fhotel_id = " . $FHotelId . " ")->result_array();

        for ($i = 0; $i < count($ROOM_data); $i++) {

            $RoomPackageData = explode(",", $ROOM_data[$i]['fmaster_package_type_id']);

            $ROOM_data[$i]['PackageId'] = $RoomPackageData;


            $RoomPackageData = $this->db->query("SELECT * FROM `master_package_type` WHERE IsDeleted=1 AND id IN(" . $ROOM_data[$i]['fmaster_package_type_id'] . ") ")->result_array();

            //            $ROOM_Facilities = $this->db->query("SELECT rf.facilities,mrf.* FROM master_room_facilities mrf
            //JOIN `room_facilities` rf ON rf.id=mrf.room_facilities AND rf.IsDeleted = 1
            //WHERE mrf.IsDeleted = 1 AND mrf.Fhotel_id = " . $FHotelId . " AND mrf.froom_id=" . $ROOM_data[$i]['id'] . " ")->result_array();

            $ROOM_Facilities = $this->db->query("SELECT rf.name,mrf.* FROM rooms_facilities_master mrf 
JOIN rooms_facilities rf ON rf.id=mrf.frooms_facilities_id AND rf.IsDeleted = 1
WHERE mrf.IsDeleted = 1 AND mrf.fhotel_id = " . $FHotelId . " AND mrf.fmaster_room_type_id=" . $ROOM_data[$i]['id'] . " ")->result_array();


            for ($k = 0; $k < count($ROOM_Facilities); $k++) {
                $ROOM_data[$i]["FacilitiesId"][] = $ROOM_Facilities[$k]['room_facilities_id'];
                $ROOM_data[$i]["Facilities"][$k]['FacilitiesId'] = $ROOM_Facilities[$k]['id'];
                $ROOM_data[$i]["Facilities"][$k]['FacilitiesName'] = $ROOM_Facilities[$k]['name'];
            }

            for ($l = 0; $l < count($RoomPackageData); $l++) {
                $ROOM_data[$i]["RoomPackage"][$l]['Id'] = $RoomPackageData[$l]['id'];
                $ROOM_data[$i]["RoomPackage"][$l]['PackageName'] = $RoomPackageData[$l]['package_type'];
            }
        }
        echo json_encode($ROOM_data);
    }

    public function get_facilities_data()
    {
        $Facilities_data = $this->db->query("SELECT * FROM `hotel_facilities` WHERE IsDeleted = 1 ")->result_array();
        echo json_encode($Facilities_data);
    }

    public function get_room_type()
    {
        $FHotelId = $_GET['FhotelId'];

        $RoomType_data = $this->db->query("SELECT * FROM `master_room_type` WHERE IsDeleted = 1 AND fhotel_id=" . $FHotelId . " ")->result_array();
        echo json_encode($RoomType_data);
    }

    public function get_room_package_type()
    {
        $FHotelId = $_GET['FhotelId'];
        $FRoomId = $_GET['FRoomId'];

        $RoomPackage_data = $this->db->query("SELECT mpt.*,mrt.room_type FROM master_package_type mpt
LEFT JOIN master_room_type mrt ON mrt.id = mpt.fmaster_room_type_id 
WHERE mpt.IsDeleted = 1 AND mpt.fhotel_id=" . $FHotelId . " AND mpt.fmaster_room_type_id=" . $FRoomId . " AND mrt.IsDeleted = 1 ")->result_array();
        echo json_encode($RoomPackage_data);
    }

    public function get_room_all_package_type()
    {
        $FHotelId = $_GET['FhotelId'];

        $RoomPackage_data = $this->db->query("SELECT mpt.*,mrt.room_type FROM master_package_type mpt
LEFT JOIN master_room_type mrt ON mrt.id = mpt.fmaster_room_type_id 
WHERE mpt.IsDeleted = 1 AND mpt.fhotel_id=" . $FHotelId . " AND mrt.IsDeleted = 1 ")->result_array();
        echo json_encode($RoomPackage_data);
    }

    public function get_room_facilities_data()
    {
        $Facilities_data = $this->db->query("SELECT * FROM `rooms_facilities` WHERE IsDeleted = 1 ")->result_array();
        echo json_encode($Facilities_data);
    }

    // ! ----------------------------------
    // ! WEBSITE API's
    // ! ----------------------------------

    public function get_location_by_city()
    {
        try {
            $result = $this->Fetch_Model->get_data_by_query("SELECT city FROM hotel WHERE IsDeleted = '1' GROUP BY city");
            if ($result) {
                $response["response_code"] = 1;
                $response["msg"] = "Successfully read!";
                $response["data"] = $result;
            } else {
                $response["response_code"] = 0;
                $response["msg"] = "Database Operation Failed.";
            }

            echo json_encode($response);
        } catch (\Exception $err) {
            //throw $th;
            $response["response_code"] = 0;
            $response["msg"] = "Database Operation Failed.";
            echo json_encode($response);
        }
    }

    public function get_hotels_list()
    {
        try {
            $hotel_data = $this->db->query("SELECT * FROM hotel WHERE IsDeleted = 1")->result_array();
            $rooms_data = $this->db->query("SELECT * FROM rooms WHERE availablity = 1 AND IsDeleted = 1 GROUP BY fhotel_id")->result_array();
            $hotel_imgs = $this->db->query("SELECT * FROM hotel_images WHERE IsDeleted = 1")->result_array();

            $facilities_data = $this->db->query("SELECT hfm.*, hf.id,hf.name,hf.icon FROM `hotel_facilities_master` hfm
            JOIN `hotel_facilities` hf ON hf.id = hfm.fhotel_facilities_id AND hf.IsDeleted = 1
            WHERE hfm.IsDeleted = 1")->result_array();

            for ($i = 0; $i < count($hotel_data); $i++) {
                $hotel_data[$i]['facilities'] = $this->Fetch_Model->searchInArray($facilities_data, array('fhotel_id' => $hotel_data[$i]['id']));
                $hotel_data[$i]['rooms_data'] = $this->Fetch_Model->searchInArray($rooms_data, array('fhotel_id' => $hotel_data[$i]['id']));
                $img_data = $this->Fetch_Model->searchInArray($hotel_imgs, array('fhotel_id' => $hotel_data[$i]['id']));

                for ($j = 0; $j < count($img_data); $j++) {
                    $img_url[$j]['img'] = base_url() . 'application/Uploads/HotelPhoto/' . $img_data[$j]["image"];
                }
                $hotel_data[$i]['images'] = $img_url;
            }

            if ($hotel_data) {
                $response["response_code"] = 1;
                $response["msg"] = "Successfully read!";
                $response["data"] = $hotel_data;
            } else {
                $response["response_code"] = 0;
                $response["msg"] = "Database Operation Failed.";
            }

            echo json_encode($response);
        } catch (\Exception $err) {
            //throw $th;
            $response["response_code"] = 0;
            $response["msg"] = "Database Operation Failed.";
            echo json_encode($response);
        }
    }

    public function get_hotel_details_by_id()
    {
        try {
            $hotel_id = $_POST['hotelId'];

            $query = 'SELECT * FROM hotel WHERE IsDeleted = 1 AND id = ' . $hotel_id . ' ';
            $img_query = 'SELECT * FROM hotel_images WHERE fhotel_id = ' . $hotel_id . ' ';
            $facility_query = 'SELECT hfm.*, hf.id,hf.name,hf.icon FROM `hotel_facilities_master` hfm
            JOIN `hotel_facilities` hf ON hf.id = hfm.fhotel_facilities_id AND hf.IsDeleted = 1 
            WHERE hfm.IsDeleted = 1 AND fhotel_id = ' . $hotel_id . ' ';

            $hotel = $this->db->query($query)->result_array();
            $hotel_imgs = $this->db->query($img_query)->result_array();
            $facilities_data = $this->db->query($facility_query)->result_array();


            for ($i = 0; $i < count($hotel_imgs); $i++) {
                $imgs_data[$i] = base_url() . 'application/Uploads/HotelPhoto/' . $hotel_imgs[$i]["image"];
            }

            // ! Room facilities
            $room_types_query = 'SELECT r.`id`,r.`fhotel_id` ,r.`fmaster_room_type_id` AS room_type_id, mr.`room_type` FROM rooms r 
            JOIN master_room_type mr ON mr.id = r.`fmaster_room_type_id` AND mr.`IsDeleted` = 1
            WHERE r.IsDeleted = 1 AND r.`fhotel_id` = ' . $hotel_id . ' GROUP BY room_type ';

            $room_facility_query = 'SELECT rfm.fhotel_id, rfm.fmaster_room_type_id,rf.*  FROM `rooms_facilities_master` rfm
            JOIN `rooms_facilities` rf ON rf.id = rfm.frooms_facilities_id AND rf.IsDeleted = 1
            WHERE rfm.IsDeleted = 1 AND rfm.fhotel_id = ' . $hotel_id . ' ';

            $room_types = $this->db->query($room_types_query)->result_array();
            $room_facility = $this->db->query($room_facility_query)->result_array();

            for ($j = 0; $j < count($room_types); $j++) {
                $room_types[$j]['room_facilities'] = $this->Fetch_Model->searchInArray($room_facility, array('fmaster_room_type_id' => $room_types[$j]['room_type_id']));
            }

            $hotel[0]['slider_imgs'] = $imgs_data;
            $hotel[0]['hotel_facilities'] = $facilities_data;
            $hotel[0]['choose_your_room'] = $room_types;

            if ($hotel) {
                $response["response_code"] = 1;
                $response["msg"] = "Successfully read!";
                $response["data"] = $hotel;
            } else {
                $response["response_code"] = 0;
                $response["msg"] = "Database Operation Failed.";
            }

            echo json_encode($response);
        } catch (\Exception $err) {
            //throw $th;
            $response["response_code"] = 0;
            $response["msg"] = "Database Operation Failed.";
            echo json_encode($response);
        }
    }

    public function get_rooms_by_hotel_id()
    {
        try {
            $hotel_id = $_POST['hotelId'];
            $totalRooms = $_POST['totalRooms'];

            $query = 'SELECT r.*,mr.`room_type`, count(r.`fmaster_room_type_id`) as roomCount FROM rooms r 
            JOIN master_room_type mr ON mr.id = r.`fmaster_room_type_id` AND mr.`IsDeleted` = 1 
            WHERE r.IsDeleted = 1 AND r.availablity = 1  AND r.`fhotel_id` = ' . $hotel_id . '
            group by r.fmaster_room_type_id, r.fmaster_package_type_id';

            $query2 = 'SELECT * FROM master_package_type WHERE IsDeleted = 1 AND fhotel_id = ' . $hotel_id . ' ';
            $room_data = $this->db->query($query)->result_array();
            $package_data = $this->db->query($query2)->result_array();

            $z = 0;
            for ($i = 0; $i < count($room_data); $i++) {

                if ($room_data[$i]['roomCount'] >= $totalRooms) {

                    $packed_exploaded_id = explode(",", $room_data[$i]['fmaster_package_type_id']);
                    for ($j = 0; $j < count($packed_exploaded_id); $j++) {
                        $pData = $this->Fetch_Model->searchInArray($package_data, array('id' => $packed_exploaded_id[$j]));
                        for ($k = 0; $k < count($pData); $k++) {

                            $data[$z]['fhotel_id'] = $room_data[$i]['fhotel_id'];
                            $data[$z]['frooms_id'] = $room_data[$i]['id'];
                            $data[$z]['room_id'] = $room_data[$i]['room_id'];
                            $data[$z]['room_type_id'] = $room_data[$i]['fmaster_room_type_id'];
                            $data[$z]['room_type'] = $room_data[$i]['room_type'];
                            $data[$z]['package_type_id'] = $pData[$k]['id'];
                            $data[$z]['package'] = $pData[$k]['package_type'];
                            $data[$z]['rate'] = $pData[$k]['rate'];
                            $data[$z]['extra_bed_rate'] = $pData[$k]['extra_bed_rate'];
                            $data[$z]['discount'] = $pData[$k]['discount'];
                            $z++;
                        }
                    }
                }
            }

            if ($data) {
                $response["response_code"] = 1;
                $response["msg"] = "Successfully read!";
                $response["data"] = $data;
            } else {
                $response["response_code"] = 0;
                $response["msg"] = "Sorry!, Rooms are not available, Try Later!";
            }

            echo json_encode($response);
        } catch (\Exception $err) {
            //throw $th;
            $response["response_code"] = 0;
            $response["msg"] = "Database Operation Failed.";
            echo json_encode($response);
        }
    }
    public function get_booking_by_id()
    {
        try {
            $booking_id = $_POST['id'];
            $booking_data = $this->Fetch_Model->get_booking_by_id($booking_id);

            if ($booking_data) {
                $response["response_code"] = 1;
                $response["msg"] = "Successfully read!";
                $response["data"] = $booking_data;
            } else {
                $response["response_code"] = 0;
                $response["msg"] = "Database Operation Failed.";
            }

            echo json_encode($response);
        } catch (\Exception $err) {
            //throw $th;
            $response["response_code"] = 0;
            $response["msg"] = "Database Operation Failed.";
            echo json_encode($response);
        }
    }
    public function get_user_bookings_by_id()
    {
        try {
            $userId = $_POST['userId'];
            $booking_data = $this->Fetch_Model->get_booking_by_flogin_id($userId);

            if ($booking_data) {
                $response["response_code"] = 1;
                $response["msg"] = "Successfully read!";
                $response["data"] = $booking_data;
            } else {
                $response["response_code"] = 0;
                $response["msg"] = "Database Operation Failed.";
            }

            echo json_encode($response);
        } catch (\Exception $err) {
            //throw $th;
            $response["response_code"] = 0;
            $response["msg"] = "Database Operation Failed.";
            echo json_encode($response);
        }
    }
    public function get_bookings_by_hotelId()
    {
        try {
            $hotelId = $_GET['FhotelId'];
            $result_data = $this->Fetch_Model->get_data_by_query("SELECT * FROM booking WHERE Fhotel_id =" . $hotelId . " AND IsDeleted = 1");

            if ($result_data) {
                $response["response_code"] = 1;
                $response["msg"] = "Successfully read!";
                $response["data"] = $result_data;
            } else {
                $response["response_code"] = 0;
                $response["msg"] = "Database Operation Failed.";
            }

            echo json_encode($response);
        } catch (\Exception $err) {
            //throw $th;
            $response["response_code"] = 0;
            $response["msg"] = "Database Operation Failed.";
            echo json_encode($response);
        }
    }
    public function get_booking_available_or_not()
    {
        try {
            $hotelId = $_POST['hotelId'];
            $totalRooms = $_POST['totalRooms'];
            $roomType = $_POST['roomType'];
            $toDate = $_POST['toDate'];
            $fromDate = $_POST['fromDate'];

            $queryRoom = "SELECT COUNT(r.id) AS roomsCount FROM rooms r
            JOIN master_room_type mr ON mr.id = r.fmaster_room_type_id
            WHERE r.fhotel_id = '" . $hotelId . "' AND r.IsDeleted = 1 AND mr.IsDeleted = 1 AND mr.room_type = '" . $roomType . "' ";
            $roomCount_data = $this->Fetch_Model->get_data_by_query($queryRoom);

            $query = "SELECT COUNT(id) as bookedCount FROM booking WHERE fhotel_id = '" . $hotelId . "' AND room_type = '" . $roomType . "'  AND IsDeleted = '1' AND (((check_in>='2023-05-16' AND check_in<='2023-05-24') OR (check_out>='" . $toDate . "' AND check_out<='" . $fromDate . "')) OR ((check_in>='" . $toDate . "' AND check_in<='" . $fromDate . "') OR (check_out>='" . $toDate . "' AND check_out<='" . $fromDate . "')))";
            $result_data = $this->Fetch_Model->get_data_by_query($query);

            if ($result_data) {

                $actualRoom = intval($roomCount_data[0]['roomsCount']) - intval($result_data[0]['bookedCount']);

                if ($actualRoom >= $totalRooms) { // 0 >= 1
                    $response["response_code"] = 1;
                    $response["msg"] = "Rooms Available";
                } else {
                    if ($actualRoom == 0) {
                        $response["response_code"] = 0;
                        $response["msg"] = "Sorry! The room is not available on selected date. Kindly select different dates.";
                    } else if ($actualRoom > 0) {
                        $response["response_code"] = 0;
                        $response["msg"] = "Hurry Up! Only few rooms are available!";
                    }
                }
            } else {
                $response["response_code"] = 0;
                $response["msg"] = "Database Operation Failed.";
            }

            echo json_encode($response);
        } catch (\Exception $err) {
            //throw $th;
            $response["response_code"] = 0;
            $response["msg"] = "Database Operation Failed.";
            echo json_encode($response);
        }
    }
}
